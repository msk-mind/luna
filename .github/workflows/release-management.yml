name: Release Management

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    concurrency: release

    steps:
    - uses: actions/checkout@v2
      with:
        ref: 'master'
        fetch-depth: 0
        persist-credentials: false

    # temporarily turn branch protection off for semantic release
    - name: Branch protection OFF
      uses: octokit/request-action@v2.x
      with:
        route: PUT /repos/msk-mind/luna/branches/master/protection
        repository: ${{ github.repository }}
        required_status_checks: |
          null
        enforce_admins: |
          null
        required_pull_request_reviews: |
          null
        restrictions: |
          null
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_ADMIN_TOKEN }}
    # create a git release
    - name: Release pyluna
      uses: relekang/python-semantic-release@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        pypi_token: ${{ secrets.PYPI_TOKEN }}

    # turn branch protection back on
    - name: Branch protection ON
      uses: octokit/request-action@v2.x
      with:
        route: PUT /repos/msk-mind/luna/branches/master/protection
        repository: ${{ github.repository }}
        required_status_checks: |
          null
        enforce_admins: |
          null
        required_pull_request_reviews: |
          required_approving_review_count: 1
        restrictions: |
          null
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_ADMIN_TOKEN }}

  push-to-pypi:
    runs-on: ubuntu-latest
    needs: release

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: 'master'

      - name: Setup python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Add wheel dependency
        run: pip install wheel

      # pyluna-common
      - name: Generate dist luna
        run: poetry install

      - name: Publish pyluna to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          packages_dir: ./dist

