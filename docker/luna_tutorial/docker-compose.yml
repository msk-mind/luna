# future enhancements"
# - choose a proper init system - https://ahmet.im/blog/minimal-init-process-for-containers/
#                               - https://docs.docker.com/config/containers/multi-service_container/
# - apply namespaced volume labels - https://docs.docker.com/compose/compose-file/compose-file-v3/#volume-configuration-reference
# - make certain volumes external so "docker-compose down" does not remove them
# - parameterize make exec container name
# - set user in girder container to match host user
# - label network explicitly (currently luna_tutorial_default)
# prefix container names with user name
---
version: '3'
services:
  girder:
    image: ${USER_NAME}_luna_tutorial_girder:v0.0.3
    container_name: ${USER_NAME}_girder
    build:
      context: .
      dockerfile: dockerfile_girder
      args:
        - USER_ID=${USER_ID}
        - GROUP_ID=${GROUP_ID}
        - USER_NAME=${USER_NAME}
        - GROUP_NAME=${GROUP_NAME}
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ${PWD}/vmount/assetstore:/home/${USER_NAME}/vmount/assetstore
      - ${PWD}/vmount:/home/${USER_NAME}/vmount
    depends_on:
      - mongodb

  mongodb:
    image: "mongo:5.0.8"
    container_name: ${USER_NAME}_mongodb
    restart: unless-stopped
    command: --nojournal
    volumes:
      - ${PWD}/vmount/db:/db

  luna_tutorial:
    image: ${USER_NAME}_luna_tutorial_main:v0.0.2
    container_name: ${USER_NAME}_luna_tutorial
    build:
      context: ../..
      dockerfile: docker/luna_tutorial/dockerfile_luna_tutorial
      args:
        - USER_ID=${USER_ID}
        - GROUP_ID=${GROUP_ID}
        - USER_NAME=${USER_NAME}
        - GROUP_NAME=${GROUP_NAME}
        - LUNA_VERSION=0.3.3
    # Set USER_ID to your user id (e.g., `USER_ID=$(id -u):$(id -g)`)
    # so that logs and tmp files are owned by yourself.
    user: ${USER_ID}
    restart: unless-stopped
    ports:
      - "8888:8888"
      - "6006:6006"
      - "8787:8787"
      - "8786:8786"
    volumes:
      - ${PWD}/vmount:/home/${USER_NAME}/vmount

  # # bash -c "dask scheduler --port 8786 >> ~/vmount/logs/dask_scheduler.log 2>&1"
  # # bash -c vmount/start_dask.sh
  # dask_cluster:
  #   image: ${USER_NAME}_luna_tutorial_main:v0.0.1
  #   container_name: ${USER_NAME}_dask_cluster
  #   user: ${USER_ID}
  #   restart: unless-stopped
  #   ports:
  #     - "8787:8787"
  #     - "8786:8786"
  #   command: |
  #       bash -c "bash $HOME/vmount/start_dask.sh"
  #   volumes:
  #     - ${PWD}/vmount:/home/${USER_NAME}/vmount

  minio:
    image: minio/minio:RELEASE.2022-05-04T07-45-27Z
    container_name: ${USER_NAME}_minio
    command: server /data --console-address ":9001"
    ports:
      - "9002:9000"
      - "9500:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password1
    volumes:
      - ${PWD}/vmount:/data

  waystation:
    image: mskmind/luna-waystation
    container_name: ${USER_NAME}_way_station
    environment:
      S3_ROOT_URL: http://minio:9000/datasets
      S3_ACCESS_KEY: admin
      S3_SECRET_KEY: password1

  dremio:
    image: dremio/dremio-oss:21.1
    container_name: ${USER_NAME}_dremio
    ports:
      - "9047:9047"
      - "31010:31010"
      - "45678:45678"
    volumes:
    - ${PWD}/vmount:/data

