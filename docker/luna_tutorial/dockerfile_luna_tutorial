FROM mambaorg/micromamba:1.0.0
USER root
RUN apt-get update && apt-get install build-essential libgdal-dev liblapack-dev libblas-dev gfortran libgl1 software-properties-common git vim curl tree -y

## supress interactive dialogs
ARG DEBIAN_FRONTEND=noninteractive

ARG USER_ID
ARG GROUP_ID
ARG USER_NAME
ARG LUNA_VERSION

ENV PYTHONFAULTHANDLER=1 \
                       PYTHONUNBUFFERED=1 \
                       PYTHONHASHSEED=random \
                       PIP_NO_CACHE_DIR=off \
                       PIP_DISABLE_PIP_VERSION_CHECK=on \
                       PIP_DEFAULT_TIMEOUT=100 \
                       POETRY_VERSION=1.1.15

## create user so python packages are not being installed with root and jupyter is not executed with rootr
## map host user to container user so files can be easily accessed from host and container
RUN usermod "--login=${USER_NAME}" "--home=/home/${USER_NAME}" \
        --move-home "-u ${USER_ID}" "${MAMBA_USER}" && \
    groupmod "--new-name=${USER_NAME}" \
             "-g ${GROUP_ID}" "${MAMBA_USER}" && \
    # Update the expected value of MAMBA_USER for the
    # _entrypoint.sh consistency check.
    echo "${USER_NAME}" > "/etc/arg_mamba_user" && \
    :
ENV MAMBA_USER=$USER_NAME
USER $MAMBA_USER
COPY --chown=$USER_ID:$GROUP_ID environment.yml poetry.lock pyproject.toml /home/$USER_NAME/

WORKDIR /home/$USER_NAME

RUN micromamba install -y -n base -f environment.yml && \
    micromamba clean --all --yes
ARG MAMBA_DOCKERFILE_ACTIVATE=1  # (otherwise python will not be found)

# workaround for https://github.com/pypa/setuptools/issues/3693
RUN poetry export --dev --without-hashes -f requirements.txt | SETUPTOOLS_USE_DISTUTILS=stdlib pip install --no-deps -r /dev/stdin

COPY --chown=$USER_ID:$GROUP_ID . /home/$USER_NAME/
RUN poetry config virtualenvs.create false && \
        poetry build &&  pip install --no-deps dist/*.whl

## set env vars
ENV LUNA_HOME="/home/$USER_NAME/vmount"
ENV LANG="C.UTF-8"

## verify installation
RUN echo $LUNA_HOME
RUN python3 -c 'import luna; import luna.common; import luna.pathology'
RUN which jupyter

# Ideally we want to remove the need to do this, maybe?
COPY docker/luna_tutorial/vmount/conf/logging.cfg "/home/$USER_NAME/vmount/conf/logging.cfg"


## entrypoint (see docker-compose file)
