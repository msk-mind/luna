[metadata]
name = pyluna-pathology
version = attr: __version__
description = Transformation functions and services for multi-modal oncology data
long_description = file: README.md
long_description_content_type = text/markdown
keywords = radiology, pathology, clinical
license = Apache License version 2.0
home_page = https://componcmsk.org/msk-mind/
author = msk-mind
author_email = CompOncBST@mskcc.org
url = https://github.com/msk-mind/luna
project_urls =
	Bug Tracker = https://github.com/msk-mind/luna/issues
classifiers =
    Framework :: Pytest
    Development Status :: 3 - Alpha
    License :: OSI Approved :: Apache Software License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Topic :: Scientific/Engineering :: Artificial Intelligence

# lib can work off of a zip file
[options]
zip_safe = True
packages =
    find_namespace:

# keep dependencies abstract and not specific to a particular version
install_requires =
    openslide-python
    shapely
    seaborn
    ijson
    geojson
    orjson
    torch
    torchvision
    staintools
    pyluna-common
    scikit-learn
    girder-client==3.1.3
    spams
    h5py
    ray
    torchmetrics
    docker
    histomicstk


[options.package_data]
* = *.dcm, *.svg, *.bmp, *.yaml, *.yml, *.parquet, *.crc, *.json, *.npy, tests*

[options.extras_require]
dev =
    pytest
    pytest-cov
    pytest-mock
    pytest-runner
    testfixtures
    requests-mock
    mock
    wheel>=0.22
    pyinstaller>=4.0
    poetry
    python-semantic-release
    m2r2
    twine
    Sphinx

# paths to executables
[options.entry_points]
console_scripts =
    dsa = luna.pathology.cli.dsa_viz:cli [pathology]
    dsa_upload = luna.pathology.cli.dsa_upload:cli [pathology]
    dsa_annotation = luna.pathology.cli.dsa.dsa_annotations:cli [pathology]
    generate_tiles = luna.pathology.cli.generate_tiles:cli [pathology]
    save_tiles = luna.pathology.cli.save_tiles:cli [pathology]
    generate_mask = luna.pathology.cli.generate_mask:cli [pathology]
    extract_stain_texture = luna.pathology.cli.extract_stain_texture:cli [pathology]
    label_tiles = luna.pathology.cli.generate_tile_labels:cli [pathology]
    infer_tiles = luna.pathology.cli.infer_tile_labels:cli [pathology]
    load_slide = luna.pathology.cli.load_slide:cli [pathology]
    visualize_tiles_png = luna.pathology.cli.visualize_tile_labels:cli [pathology]
    load_regional_annotations = luna.pathology.cli.dsa.dsa_regional_annotations:cli [pathology]
    train_tissue_classifier = luna.pathology.cli.train_tissue_classifier:cli [pathology]
    generate_tile_mask = luna.pathology.cli.generate_tile_mask:cli [pathology]
    extract_shape_features = luna.pathology.cli.extract_shape_features:cli [pathology]


[bdist_wheel]
universal = 1

[flake8]
exclude = docs

[aliases]
# Define setup.py command aliases here
test = pytest

[tool:pytest]
collect_ignore = ['setup.py']

[semantic_release]
version_pattern = ../VERSION.txt:(\d+\.\d+\.\d+)
changelog_file = ../HISTORY.md
commit_version_number = True
major_on_zero = False
## below configurations will be set when running `semantic-release publish`
# upload_to_pypi = True
# repository = pypitest
# upload_to_release = False
