[metadata]
name = pyluna
version = attr: src.__version__
description = Transformation functions and services for multi-modal oncology data
long_description = file: README.md
long_description_content_type = text/markdown
keywords = radiology, pathology, clinical
license = Apache License version 2.0
home_page = https://componcmsk.org/msk-mind/
author = msk-mind
author_email = CompOncBST@mskcc.org
url = https://github.com/msk-mind/luna
project_urls =
	Bug Tracker = https://github.com/msk-mind/luna/issues
classifiers =
    Framework :: Pytest
    Development Status :: 3 - Alpha
    License :: OSI Approved :: Apache Software License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Topic :: Scientific/Engineering :: Artificial Intelligence

# lib can work off of a zip file
[options]
zip_safe = True
include_package_data = True
packages = find_namespace:
# keep dependencies abstract and not specific to a particular version
install_requires =
    dask
    distributed
    click
    decorator>=4.3,<5.0  # force constrain versions to avoid incompatibility with networkx requirements
    filehash
    joblib
    minio
    neo4j
    numpy>=1.9.0
    pandas>=1.1.0
    pyarrow>=3.0.0
    pyspark
    scikit-image
    itk
    opencv-python
    tornado>=6.0.4
    PyYAML>=5.4
    jsonpath-ng>=1.5.2
    yamale>=3.0.4
    pyradiomics
    flask_restx
    requests>=2.25.1
    Pillow>=8.1.1
    deltalake>=0.2.1
    dirhash
    log4mongo

[options.package_data]
* = *.dcm, *.svg, *.bmp, *.yaml, *.yml, *.parquet, *.crc, *.json, *.npy

[options.extras_require]
# users
all =
    %(radiology)s
    %(pathology)s

# radiology package
radiology =
    pyluna-radiology @ file://localhost/Users/rosed2/Documents/msk-mind/luna/pyluna-radiology

# pathology package
pathology =
    pyluna-pathology @ file://localhost/Users/rosed2/Documents/msk-mind/luna/pyluna-pathology

# contributors
dev =
    %(radiology)s
    %(pathology)s
    pytest
    pytest-cov
    pytest-mock
    pytest-runner
    testfixtures
    requests-mock
    mock
    wheel>=0.22
    pyinstaller>=4.0
    poetry
    python-semantic-release
    m2r2
    twine
    Sphinx

[bdist_wheel]
universal = 1

[flake8]
exclude = docs

[aliases]
# Define setup.py command aliases here
test = pytest

[tool:pytest]
collect_ignore = ['setup.py']

[semantic_release]
branch = main
version_variable = src/__init__.py:__version__
changelog_file = HISTORY.md
commit_parser = semantic_release.history.emoji_parser
commit_version_number = True
check_build_status = True
upload_to_pypi = True
## 1. test push pypitest only
repository = pypitest
upload_to_release = False
## 2. real push to pypi and publish a release on git
# repository = pypi
# upload_to_release = True